plugins {
    id 'com.android.application'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
    id 'org.sonarqube' // added for sonar qube

}

// added for sonar qube
sonarqube {
    //Command to run Sonar
    // ./gradlew sonarqube -Dsonar.host.url=http://localhost:9000/
    // ./sonar.sh start

    properties {
        property "sonar.projectName", "MVVM Sample"
        property "sonar.projectKey", "mvvm_sample"
        property "sonar.host.url", "http://localhost:9000"
        property "sonar.language", "java"
        property "sonar.language", "kotlin"
        property "sonar.sources", "src/main/java"
        property "sonar.java.sources", "src/main/java"
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.login", "admin"
        property "sonar.password", "prn_admin"
    }
}
android {
    compileSdk 31

    defaultConfig {
        applicationId "com.sample"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField 'String', 'BASE_URL', '"https://restcountries.com/v3.1/"'


    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }

    dataBinding {
        enabled true
    }
}
kapt {
    javacOptions {
        option("-Adagger.hilt.android.internal.disableAndroidSuperclassValidation=true")
    }
}
dependencies {


    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.2'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-common-java8:2.4.0'

    // Local Unit Tests
    testImplementation "com.google.truth:truth:1.1.2"

    // Instrumented Unit Tests
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.0-native-mt"
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation "com.google.truth:truth:1.1.2"

    // Architectural Components
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.0"

    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.4.0"

    // Hilt Dependancy Injection


    //Hilt
    implementation 'com.google.dagger:hilt-android:2.39.1'
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha03"
    kapt 'com.google.dagger:hilt-android-compiler:2.39.1'
    kapt "androidx.hilt:hilt-compiler:1.0.0"


    //Picassso
    implementation 'com.squareup.picasso:picasso:2.71828'



    //Preference Data Store
    implementation "androidx.datastore:datastore-preferences:1.0.0"


    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.0'

    // Coroutine Lifecycle Scopes
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.0"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.4.0"

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation "com.squareup.okhttp3:logging-interceptor:4.9.1"

    // Navigation Components
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.5'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'

    //Preferences
    implementation "androidx.preference:preference-ktx:1.1.1"

    //An android lib that provides a new size unit - ssp (scalable sp).
    // This size unit scales with the screen size based on the sp size unit (for texts).
    // It can help Android developers with supporting multiple screens.
    //https://github.com/intuit/ssp
    implementation "com.intuit.sdp:sdp-android:1.0.6"
    implementation "com.intuit.ssp:ssp-android:1.0.6"


    // Testing dependencies
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:2.39.1"
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:3.4.0"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.4.0"
    androidTestImplementation "androidx.test.espresso:espresso-intents:3.4.0"
    androidTestImplementation "androidx.test.ext:junit:1.1.3"
    androidTestImplementation "androidx.test.uiautomator:uiautomator:2.2.0"
    androidTestImplementation "androidx.work:work-testing:2.7.1"
    androidTestImplementation "com.google.truth:truth:1.1.2"
    androidTestImplementation "com.google.dagger:hilt-android-testing:2.38.1"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.0-native-mt"
    testImplementation "junit:junit:4.13.2"

}